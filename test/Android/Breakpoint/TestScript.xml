<?xml version="1.0" encoding="utf-8"?>
<GlassEventLog>
  <Command name="setmode ShowParameterValues off"/>
  <Command name="setAsExpectedEvent IDebugBreakpointBoundEvent2" />
  <Command name="setAsExpectedEvent IDebugBreakpointErrorEvent2" />
  <Command name="SetLaunchOptionsString @LaunchOptions.xml" />
  <Command name="bp main.cpp 25" />
  <Command name="launch MIEngine app_process">
    <Event name="IDebugSessionCreateEvent2" expected="False" />
    <Event name="IDebugProcessCreateEvent2" expected="False" />
    <Event name="IDebugProgramCreateEvent2" expected="False" />
    <Event name="IDebugBreakpointErrorEvent2" expected="True">
      <WarningMessage>module containing this breakpoint has not yet loaded or the breakpoint address could not be obtained.</WarningMessage>
    </Event>
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugOutputStringEvent2" expected="False" />
    <Event name="IDebugBreakpointBoundEvent2" expected="True">
      <BoundBreakpoint  IgnoreCase="True" RegEx="^24,0 to 24,0 in (\[Unknown\]|libbreakpoint.so)!(break_test_1\(\)|[0-9A-Fa-f]{8,16})$"></BoundBreakpoint>
    </Event>
    <Event name="IDebugModuleLoadEvent2" expected="False" />
    <Event name="IDebugOutputStringEvent2" expected="False" />
    <Event name="IDebugOutputStringEvent2" expected="False" />
    <Event name="IDebugOutputStringEvent2" expected="False" />
    <Event name="IDebugThreadCreateEvent2" expected="False" />
    <Event name="IDebugBreakpointEvent2" expected="True">
      <functionName>break_test_1</functionName>
      <function>break_test_1()</function>
      <file>main.cpp</file>
      <line>25</line>
      <col>0</col>
    </Event>
    <Duration Volatile="True">00:00:03.8815982</Duration>
    <OutputString Volatile="True">{File not found: $PackageFolder$\Microsoft.Android.natvis
=thread-group-added,id="i1"GNU gdb (GDB) 7.7
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "--host=i586-pc-mingw32msvc --target=i686-pc-linux-android".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
&lt;http://source.android.com/source/report-bugs.html&gt;.
Find the GDB manual and other documentation resources online at:
&lt;http://www.gnu.org/software/gdb/documentation/&gt;.
For help, type "help".
Type "apropos word" to search for commands related to "word".
=tsv-created,name="trace_timestamp",initial="0"\n=thread-group-started,id="i1",pid="14631"=thread-created,id="1",group-id="i1"=thread-created,id="2",group-id="i1"[New Thread 14635]
=thread-created,id="3",group-id="i1"[New Thread 14636]
=thread-created,id="4",group-id="i1"[New Thread 14637]
=thread-created,id="5",group-id="i1"[New Thread 14638]
=thread-created,id="6",group-id="i1"[New Thread 14639]
=thread-created,id="7",group-id="i1"[New Thread 14640]
=thread-created,id="8",group-id="i1"[New Thread 14641]
=thread-created,id="9",group-id="i1"[New Thread 14642]
=thread-created,id="10",group-id="i1"[New Thread 14643]
=thread-created,id="11",group-id="i1"[New Thread 14671]
[Switching to Thread 14671]
}</OutputString>
  </Command>
  <Command name="callstack 3">
    <Frame> break_test_1() ***</Frame>
    <Frame> android_main(android_app * state)</Frame>
    <Frame> android_app_entry(void * param)</Frame>
  </Command>
  <Command name="delbps" />
  <Command name="bp main.cpp 29">
    <Event name="IDebugBreakpointBoundEvent2" expected="True">
      <BoundBreakpoint IgnoreCase="True" RegEx="^28,0 to 28,0 in libbreakpoint.so!(break_test_1\(\)|[0-9A-Fa-f]{8,16})$" />
    </Event>
  </Command>
  <Command name="go">
    <Event name="IDebugProcessContinueEvent100" expected="False" />
    <Event name="IDebugBreakpointEvent2" expected="True">
      <functionName>break_test_1</functionName>
      <function>break_test_1()</function>
      <file>main.cpp</file>
      <line>29</line>
      <col>0</col>
    </Event>
    <Duration Volatile="True">00:00:00.2926825</Duration>
  </Command>
  <Command name="callstack 3">
    <Frame> break_test_1() ***</Frame>
    <Frame> android_main(android_app * state)</Frame>
    <Frame> android_app_entry(void * param)</Frame>
    <Duration Volatile="True">00:00:00.0154052</Duration>
  </Command>
  <Command name="delbps">
    <Duration Volatile="True">00:00:00.0099743</Duration>
  </Command>
  <Command name="go">
    <Event name="IDebugProcessContinueEvent100" expected="False" />
    <Duration Volatile="True">00:00:00.2031384</Duration>
  </Command>
  <!-- Sleep to guarantee that we are in the infinite loop when we set the next breakpoint -->
  <Command name="sleep 1000">
    <Duration Volatile="True">00:00:01.0005157</Duration>
  </Command>
  <Command name="bp main.cpp 38">
    <Event name="IDebugOutputStringEvent2" expected="False" />
    <Event name="IDebugBreakpointBoundEvent2" expected="True">
      <BoundBreakpoint IgnoreCase="True" RegEx="^37,0 to 37,0 in libbreakpoint.so!(loop_while_true\(\)|[0-9A-Fa-f]{8,16})$" />
    </Event>
    <Event name="IDebugOutputStringEvent2" expected="False" />
    <Event name="IDebugBreakpointEvent2" expected="True">
      <functionName>loop_while_true</functionName>
      <function>loop_while_true()</function>
      <file>main.cpp</file>
      <line>38</line>
      <col>0</col>
    </Event>
    <Duration Volatile="True">00:00:00.0969223</Duration>
    <OutputString Volatile="True">{[Switching to Thread 14631]
[Switching to Thread 14671]
}</OutputString>
  </Command>
  <Command name="callstack 4">
    <Frame> loop_while_true() ***</Frame>
    <Frame> break_test_2()</Frame>
    <Frame> android_main(android_app * state)</Frame>
    <Frame> android_app_entry(void * param)</Frame>
    <Duration Volatile="True">00:00:00.0154155</Duration>
  </Command>
  <Command name="delbps">
    <Duration Volatile="True">00:00:00.0090246</Duration>
  </Command>
  <Command name="assign flag=false">
    <Duration Volatile="True">00:00:00.0568436</Duration>
  </Command>
  <Command name="bp main.cpp 45">
    <Duration Volatile="True">00:00:00.0121995</Duration>
    <Event name="IDebugBreakpointBoundEvent2" expected="True">
      <BoundBreakpoint IgnoreCase="True" RegEx="^44,0 to 44,0 in libbreakpoint.so!(break_test_2\(\)|[0-9A-Fa-f]{8,16})$" />
    </Event>
  </Command>
  <Command name="go">
    <Event name="IDebugProcessContinueEvent100" expected="False" />
    <Duration Volatile="True">00:00:00.2040340</Duration>
    <Event name="IDebugBreakpointEvent2" expected="True">
      <functionName>break_test_2</functionName>
      <function>break_test_2()</function>
      <file>main.cpp</file>
      <line>45</line>
      <col>0</col>
    </Event>
  </Command>
  <Command name="stopdebugging">
    <Event name="IDebugProgramDestroyEvent2" expected="False" />
    <Event name="IDebugProcessDestroyEvent2" expected="False" />
    <Event name="IDebugSessionDestroyEvent2" expected="True" />
  </Command>	
  <Command name="quit" />
</GlassEventLog>