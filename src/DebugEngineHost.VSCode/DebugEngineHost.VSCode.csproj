<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!--Fix the assembly version for DebugEngineHost as all the versions of this dll must have the same assembly identity
    NOTE: Ths must be set BEFORE importing miengine.settings.targets-->
    <AssemblyVersion>1.0.0</AssemblyVersion>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <!-- miengine.settings.targets must be imported first as it sets $(NuGetPackagesDirectory) -->
  <Import Project="..\..\build\miengine.settings.targets" />
  <Import Project="$(NugetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props" Condition="Exists('$(NugetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props')" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Desktop.Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{81DE2423-FB5E-4069-B3C5-4C13CE76DC0A}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Microsoft.DebugEngineHost</RootNamespace>
    <AssemblyName>Microsoft.DebugEngineHost</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputPath>$(MIDefaultOutputPath)\vscode</OutputPath>
    <DropSubDir>vscode</DropSubDir>
    <ShouldGenerateMonoSymbols>true</ShouldGenerateMonoSymbols>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsCoreClr)' == 'true'">
    <ProjectTypeGuids>$(ProjectTypeGuids);{786C830F-07A1-408B-BD7F-6EE04809D6DB};</ProjectTypeGuids>
    <TargetFrameworkVersion>v5.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsCoreClr)' == 'false'">
    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup Condition="'$(IsCoreClr)' == 'true'">
    <None Include="project.json" />
    <!-- A reference to the entire .NET Framework is automatically included -->
  </ItemGroup>
  <ItemGroup Condition="'$(IsCoreClr)' == 'false'">
    <Reference Include="System" />
    <Reference Include="Microsoft.VisualStudio.Debugger.InteropA">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.Portable.1.0.1/lib/portable-net45+net46+dnxcore50/Microsoft.VisualStudio.Debugger.InteropA.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(NuGetPackagesDirectory)\Newtonsoft.Json.9.0.1\lib\portable-net45+wp80+win8+wpa81\Newtonsoft.Json.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="HostLogger.cs" />
    <Compile Include="HostRunInTerminal.cs" />
    <Compile Include="HostTelemetry.cs" />
    <Compile Include="Logger.cs" />
    <Compile Include="VSCode\EngineConfiguration.cs" />
    <Compile Include="Host.cs" />
    <Compile Include="HostConfigurationSection.cs" />
    <Compile Include="HostConfigurationStore.cs" />
    <Compile Include="HostLoader.cs" />
    <Compile Include="HostMarshal.cs" />
    <Compile Include="HostNatvisProject.cs" />
    <Compile Include="HostOutputWindow.cs" />
    <Compile Include="HostResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>HostResources.resx</DependentUpon>
    </Compile>
    <Compile Include="HostWaitDialog.cs" />
    <Compile Include="HostWaitLoop.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="VSCode\ExceptionBreakpointFilter.cs" />
    <Compile Include="VSCode\ExceptionSettings.cs" />
    <Compile Include="VSCode\HandleCollection.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="_Readme.txt" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="HostResources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>HostResources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup Condition="'$(IsCoreClr)' == 'false'">
    <DropSignedFile Include="$(OutDir)\Microsoft.DebugEngineHost.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.DebugEngineHost.dll.mdb" />
  </ItemGroup>
  <!-- Necessary because IsMonoRuntime isn't set until after DetermineCompilerBinary is run. -->
  <Target Name="GetDropFiles" AfterTargets="DetermineCompilerBinary" BeforeTargets="DropFiles">
    <ItemGroup>
      <DropUnsignedFile Condition="'$(IsMonoRuntime)' == 'false'" Include="$(OutDir)\Microsoft.DebugEngineHost.pdb" />
    </ItemGroup>
  </Target>
  <Import Condition="'$(IsCoreClr)' == 'true'" Project="$(MSBuildExtensionsPath32)\Microsoft\Portable\$(TargetFrameworkVersion)\Microsoft.Portable.CSharp.targets" />
  <Import Condition="'$(IsCoreClr)' == 'false'" Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\..\build\miengine.targets" />
  <Import Project="$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets" Condition="Exists('$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" />
  <Import Project="..\..\build\DropFiles.targets" />
</Project>