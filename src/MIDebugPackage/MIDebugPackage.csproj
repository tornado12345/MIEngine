<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="14.0">
    <!-- miengine.settings.targets must be imported first as it sets $(NuGetPackagesDirectory) -->
  <Import Project="..\..\build\miengine.settings.targets" />
  <Import Project="$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props" Condition="Exists('$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props')" />
  <Import Project="packages.props" />
  <PropertyGroup>
    <!--Visual Studio will prompt to upgrade the project unless $(MinimumVisualStudioVersion)==$(VisualStudioVersion), to make
    VS happy, we will conditionally set MinimumVisualStudioVersion based on what version is opening the project -->
    <MinimumVisualStudioVersion Condition="'$(VisualStudioVersion)' == '15.0'">15.0</MinimumVisualStudioVersion>
    <MinimumVisualStudioVersion Condition="'$(VisualStudioVersion)' != '15.0'">14.0</MinimumVisualStudioVersion>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">14.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <TargetFrameworkProfile />
    <OutputPath>$(MIDefaultOutputPath)</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Lab.Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Lab.Release|AnyCPU'">
    <DefineConstants>$(DefineConstants);CODE_ANALYSIS;TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="..\RequiredNetFX46FacadeAssemblies.targets" />
  <Import Project="SuppressFromVsix.targets" />
  <PropertyGroup>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4F38F986-5C93-44CB-A387-AEF3737E6D22}</ProjectGuid>
    <ProjectTypeGuids>{82b43b9b-a64c-4715-b499-d71e9ca2bd60};{60dc8134-eba5-43b8-bcc9-bb4bc16c2548};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Microsoft.MIDebugPackage</RootNamespace>
    <AssemblyName>Microsoft.MIDebugPackage</AssemblyName>
    <TargetFrameworkVersion>v4.6</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <!-- Because the MIEngine ships in Visual Studio, it is recommended NOT to install the .vsix
         Instead, The Visual Studio files should be directly updated.
         The VSIX is built because it is useful for F5 from VS targeting the experimental instance. -->
    <TargetVsixContainerName>$(AssemblyName).DoNotInstall.vsix</TargetVsixContainerName>
  </PropertyGroup>
  <PropertyGroup>
    <StartAction>Program</StartAction>
    <StartProgram Condition="'$(DevEnvDir)' != ''">$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootsuffix Exp</StartArguments>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="Microsoft.VisualStudio.OLE.Interop">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Interop">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Interop.8.0">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Interop.9.0">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Interop.10.0">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Interop.11.0">
      <EmbedInteropTypes>true</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Interop.12.0">
      <EmbedInteropTypes>true</EmbedInteropTypes>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.TextManager.Interop">
      <Private>False</Private>
    </Reference>
    <Reference Include="$(NugetPackagesDirectory)\Microsoft.VisualStudio.Shell.14.0.$(Microsoft_VisualStudio_Shell_14_0_Version)\lib\Microsoft.VisualStudio.Shell.14.0.dll">
      <Private>False</Private>
    </Reference>
    <!--NOTE: this reference is here to enable CreatePkgDef.exe to succeed when compiling in VS in a version != the shell targetting version -->
    <Reference Include="$(NugetPackagesDirectory)\Microsoft.VisualStudio.Utilities.$(Microsoft_VisualStudio_Utilities)\lib\net45\Microsoft.VisualStudio.Utilities.dll">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Immutable.10.0, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Immutable.11.0, Version=11.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Shell.Immutable.12.0, Version=12.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
      <Private>False</Private>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Design" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Guids.cs" />
    <Compile Include="Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <Compile Include="MIDebugPackagePackage.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="PkgCmdID.cs" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
    <EmbeddedResource Include="VSPackage.resx">
      <MergeWithCTO>true</MergeWithCTO>
      <ManifestResourceName>VSPackage</ManifestResourceName>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <Content Include="OpenFolderSchema.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <IncludeInVSIX>true</IncludeInVSIX>
    </Content>
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="packages.props" />
    <None Include="source.extension.vsixmanifest">
      <SubType>Designer</SubType>
    </None>
    <None Include="..\RequiredNetFX46FacadeAssemblies.targets" />
    <None Include="SuppressFromVsix.targets" />
  </ItemGroup>
  <ItemGroup>
    <VSCTCompile Include="MIDebugPackage.vsct">
      <ResourceName>Menus.ctmenu</ResourceName>
    </VSCTCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\Images.png" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Resources\Package.ico" />
  </ItemGroup>
  <ItemGroup>
    <VSIXSourceItem Include="@(RequiredNetFX46FacadeAssemblies)" />
    <GlassDirCopy Include="@(RequiredNetFX46FacadeAssemblies)" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="$(ToolsHome)\InstallToVSCode\coreclr\coreclr.ad7Engine.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(LocalizationEnabled)'=='true'">
    <FilesToLocalize>
      <Languages>$(VS)</Languages>
      <ProjectFile>$(MSBuildThisFileFullPath)</ProjectFile>
      <HasLceComments>false</HasLceComments>
    </FilesToLocalize>
  </ItemDefinitionGroup>
  <ItemGroup Condition="'$(LocalizationEnabled)'=='true'">
    <FilesToLocalize Include="$(OutDir)OpenFolderSchema.json">
      <LciCommentFile>$(MIEngineRoot)loc\LCI\OpenFolderSchema.json.lci</LciCommentFile>
      <TranslationFile>$(MIEngineRoot)loc\LCL\{Lang}\OpenFolderSchema.json.lcl</TranslationFile>
    </FilesToLocalize>
  </ItemGroup>
  <Target Name="DropLocalizeDir" AfterTargets="Localize;DropFiles" Condition="'$(LocalizationEnabled)'=='true'">
    <PropertyGroup>
      <LocalizedDropDir>$(DropRootDir)\loc\</LocalizedDropDir>
      <LocalizeBinDir>$(OutDir)localize\</LocalizeBinDir>
    </PropertyGroup>
    <ItemGroup>
      <!-- to copy out lcg file -->
      <LocalizedFileToDrop Include="$(LocalizeBinDir)ENU\*">
        <LCID>1033</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)CSY\*.json">
        <LCID>1029</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)DEU\*.json">
        <LCID>1031</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)ESN\*.json">
        <LCID>3082</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)FRA\*.json">
        <LCID>1036</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)ITA\*.json">
        <LCID>1040</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)JPN\*.json">
        <LCID>1041</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)KOR\*.json">
        <LCID>1042</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)PLK\*.json">
        <LCID>1045</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)PTB\*.json">
        <LCID>1046</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)RUS\*.json">
        <LCID>1049</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)TRK\*.json">
        <LCID>1055</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)CHS\*.json">
        <LCID>2052</LCID>
      </LocalizedFileToDrop>
      <LocalizedFileToDrop Include="$(LocalizeBinDir)CHT\*.json">
        <LCID>1028</LCID>
      </LocalizedFileToDrop>
    </ItemGroup>
    <Copy DestinationFiles="@(LocalizedFileToDrop->'$(LocalizedDropDir)%(LCID)\%(filename)%(extension)')" 
        SourceFiles="@(LocalizedFileToDrop)" ContinueOnError="true" />
  </Target>
  <ItemGroup>
    <DropUnsignedFile Include="Install.cmd" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.Android.natvis" />
    <DropSignedFile Include="$(OutDir)\Microsoft.AndroidDebugLauncher.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.AndroidDebugLauncher.pdb" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.AndroidDebugLauncher.pkgdef" />
    <DropSignedFile Include="$(OutDir)\Microsoft.IOSDebugLauncher.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.IOSDebugLauncher.pdb" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.IOSDebugLauncher.pkgdef" />
    <DropSignedFile Include="$(OutDir)\Microsoft.JDbg.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.JDbg.pdb" />
    <DropSignedFile Include="$(OutDir)\Microsoft.MICore.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MICore.pdb" />
    <DropSignedFile Include="$(OutDir)\Microsoft.MICore.XmlSerializers.dll" />
    <DropSignedFile Include="$(OutDir)\Microsoft.MIDebugEngine.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MIDebugEngine.pdb" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MIDebugEngine.pkgdef" />
    <DropSignedFile Include="$(OutDir)\Microsoft.MIDebugPackage.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MIDebugPackage.pdb" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MIDebugPackage.pkgdef" />
    <DropSignedFile Include="$(OutDir)\Microsoft.DebugEngineHost.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.DebugEngineHost.pdb" />
    <DropUnsignedFile Include="$(OutDir)\osxlaunchhelper.scpt" />
    <DropUnsignedFile Include="@(RequiredNetFX46FacadeAssemblies)" />
    <DropUnsignedFile Include="$(OutDir)\OpenFolderSchema.json" />
  </ItemGroup>
  <ItemGroup Condition="'$(IsCoreCLR)' == 'true'">
    <DropSignedFile Include="$(OutDir)\Microsoft.SSHDebugPS.dll" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.SSHDebugPS.pdb" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.SSHDebugPS.pkgdef" />
  </ItemGroup>
  <ItemGroup Condition="'$(IsCoreCLR)' == 'false'">
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MICore.dll.mdb" />
    <DropUnsignedFile Include="$(OutDir)\Microsoft.MIDebugEngine.dll.mdb" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\AndroidDebugLauncher\AndroidDebugLauncher.csproj">
      <Project>{e0844bff-2d67-4cb0-8e2a-e9cd888f2eb0}</Project>
      <Name>AndroidDebugLauncher</Name>
      <IncludeOutputGroupsInVSIX>BuiltProjectOutputGroup;BuiltProjectOutputGroupDependencies;GetCopyToOutputDirectoryItems;SatelliteDllsProjectOutputGroup;</IncludeOutputGroupsInVSIX>
    </ProjectReference>
    <ProjectReference Include="..\DebugEngineHost\DebugEngineHost.csproj">
      <Project>{e659fee3-7773-4a73-880a-83ce5c9634cc}</Project>
      <Name>DebugEngineHost</Name>
      <IncludeOutputGroupsInVSIX>BuiltProjectOutputGroup;BuiltProjectOutputGroupDependencies;GetCopyToOutputDirectoryItems;SatelliteDllsProjectOutputGroup;</IncludeOutputGroupsInVSIX>
    </ProjectReference>
    <ProjectReference Include="..\IOSDebugLauncher\IOSDebugLauncher.csproj">
      <Project>{d2a11674-f677-4b11-9989-2f6099a6f0a2}</Project>
      <Name>IOSDebugLauncher</Name>
      <IncludeOutputGroupsInVSIX>BuiltProjectOutputGroup;BuiltProjectOutputGroupDependencies;GetCopyToOutputDirectoryItems;SatelliteDllsProjectOutputGroup;</IncludeOutputGroupsInVSIX>
    </ProjectReference>
    <ProjectReference Include="..\JDbg\JDbg.csproj">
      <Project>{78728205-db3e-4b7b-a7d2-5cbe38e9c607}</Project>
      <Name>JDbg</Name>
    </ProjectReference>
    <ProjectReference Include="..\MICore\MICore.csproj">
      <Project>{54c33afa-438d-4932-a2f0-d0f2bb2fadc9}</Project>
      <Name>MICore</Name>
      <IncludeOutputGroupsInVSIX>BuiltProjectOutputGroup;BuiltProjectOutputGroupDependencies;GetCopyToOutputDirectoryItems;SatelliteDllsProjectOutputGroup;</IncludeOutputGroupsInVSIX>
    </ProjectReference>
    <ProjectReference Include="..\MIDebugEngine\MIDebugEngine.csproj">
      <Project>{a8b0230c-7806-407c-af18-54b2ce21275e}</Project>
      <Name>MIDebugEngine</Name>
      <IncludeOutputGroupsInVSIX>BuiltProjectOutputGroup;BuiltProjectOutputGroupDependencies;GetCopyToOutputDirectoryItems;SatelliteDllsProjectOutputGroup;</IncludeOutputGroupsInVSIX>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup Condition="'$(IsCoreCLR)' == 'true'">
    <ProjectReference Include="..\SSHDebugPS\SSHDebugPS.csproj">
      <Project>{15bcbef4-1c2b-412b-925b-34a049097e62}</Project>
      <Name>SSHDebugPS</Name>
      <IncludeOutputGroupsInVSIX>BuiltProjectOutputGroup;BuiltProjectOutputGroupDependencies;GetCopyToOutputDirectoryItems;SatelliteDllsProjectOutputGroup;</IncludeOutputGroupsInVSIX>
    </ProjectReference>
  </ItemGroup>
  <PropertyGroup>
    <UseCodebase>true</UseCodebase>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Import Project="..\..\build\miengine.targets" />
  <Import Project="..\..\build\PackageNuGet.targets" />
  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />
  <Import Project="$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets" Condition="Exists('$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" />
  <Import Project="..\..\build\DropFiles.targets" />
  <!--
  Target to drop the built files into a directory.
  For the official build, we need to drop files to the build share
  For normal builds, we drop files to <enlistment-root>\bin\debug\drop for easy sharing
  -->
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
  <!-- Extra empty msbuild targets to make it happy -->
  <Target Name="SetDevPathEnvironment" />
</Project>