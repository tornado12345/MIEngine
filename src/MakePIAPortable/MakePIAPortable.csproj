<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <!-- miengine.settings.targets must be imported first as it sets $(NuGetPackagesDirectory) -->
  <Import Project="..\..\build\miengine.settings.targets" />
  <Import Project="$(NugetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props" Condition="Exists('$(NugetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{114039A0-87B5-425B-90C9-6AFC1960A247}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>MakePIAPortable</RootNamespace>
    <AssemblyName>MakePIAPortable</AssemblyName>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <Deterministic>true</Deterministic>
    <RestorePackages>true</RestorePackages>
    <OutputPath>$(MIDefaultOutputPath)\PIA</OutputPath>
    <OutputType>Exe</OutputType>
    <PIAOutput>$(OutputPath)\drop\</PIAOutput>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Externalconsole>true</Externalconsole>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Externalconsole>true</Externalconsole>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Runtime" />
    <Reference Include="Microsoft.VisualStudio.Debugger.InteropA">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.Portable.1.0.1/lib/portable-net45+net46+dnxcore50/Microsoft.VisualStudio.Debugger.InteropA.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Debugger.Interop.10.0">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.Portable.1.0.1/lib/portable-net45+net46+dnxcore50/Microsoft.VisualStudio.Debugger.Interop.10.0.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Debugger.Interop.11.0">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.Portable.1.0.1/lib/portable-net45+net46+dnxcore50/Microsoft.VisualStudio.Debugger.Interop.11.0.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Debugger.Interop.12.0">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.Portable.1.0.1/lib/portable-net45+net46+dnxcore50/Microsoft.VisualStudio.Debugger.Interop.12.0.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.VisualStudio.Debugger.Interop.15.0">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.15.0.15.8.28010/lib/net20/Microsoft.VisualStudio.Debugger.Interop.15.0.dll</HintPath>
    </Reference>
  </ItemGroup>
  <UsingTask TaskName="FindILDAsm" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <ILDAsmFileLocation ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          ILDAsmFileLocation = Microsoft.Build.Utilities.ToolLocationHelper.GetPathToDotNetFrameworkSdkFile("ildasm.exe" , TargetDotNetFrameworkVersion.Latest);
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <Target Name="GeneratePortablePIA" BeforeTargets="SignFiles" AfterTargets="Build">
    <FindILDAsm>
      <Output PropertyName="ILDAsmFileLocation" TaskParameter="ILDAsmFileLocation" />
    </FindILDAsm>
    <Message Importance="High" Text="ILDAsmFileLocation: $(ILDAsmFileLocation)" />
    <Error Condition="'$(ILDAsmFileLocation)' == ''" Text="Unable to locate ILDasm.exe" />
    <Exec Command='$(OutputPath)MakePortableLegacyPIAS.cmd &quot;$(ILDAsmFileLocation)&quot; &quot;$(PIAOutput)&quot;' />
  </Target>
  <ItemGroup>
    <DropSignedFile Include="$(PIAOutput)\Microsoft.VisualStudio.Debugger.InteropA.dll" />
    <DropSignedFile Include="$(PIAOutput)\Microsoft.VisualStudio.Debugger.Interop.10.0.dll" />
    <DropSignedFile Include="$(PIAOutput)\Microsoft.VisualStudio.Debugger.Interop.11.0.dll" />
    <DropSignedFile Include="$(PIAOutput)\Microsoft.VisualStudio.Debugger.Interop.12.0.dll" />
    <DropSignedFile Include="$(PIAOutput)\Microsoft.VisualStudio.Debugger.Interop.15.0.dll" />
  </ItemGroup>
  <Target Name="CopyToVSCodeFolder" AfterTargets="DropFiles">
    <ItemGroup>
      <VSCodeFolderInteropFile Include="$(DropDir)\Microsoft.VisualStudio.Debugger.InteropA.dll;$(DropDir)\Microsoft.VisualStudio.Debugger.Interop.10.0.dll;$(DropDir)\Microsoft.VisualStudio.Debugger.Interop.11.0.dll;$(DropDir)\Microsoft.VisualStudio.Debugger.Interop.12.0.dll" />
    </ItemGroup>
    <Move SourceFiles="@(VSCodeFolderInteropFile)" DestinationFolder="$(DropDir)\vscode\" />
  </Target>
  <ItemGroup>
    <Compile Include="MakePIAPortable.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="MakePortableLegacyPIAs.cmd">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\..\build\miengine.targets" />
  <Import Project="$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets" Condition="Exists('$(NuGetPackagesDirectory)\MicroBuild.Core.0.2.0\build\MicroBuild.Core.targets')" />
  <Import Project="..\..\build\DropFiles.targets" />
</Project>