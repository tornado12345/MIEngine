<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <Import Project="..\..\build\miengine.settings.targets" />
  <PropertyGroup>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{54C33AFA-438D-4932-A2F0-D0F2BB2FADC9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>MICore</RootNamespace>
    <AssemblyName>Microsoft.MICore</AssemblyName>
    <DefaultLanguage>en-US</DefaultLanguage>
    <FileAlignment>512</FileAlignment>
    <ProjectTypeGuids>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <OutputPath>$(MIDefaultOutputPath)</OutputPath>
    <DocumentationFile>$(DropRootDir)\ReferenceAssemblies\$(AssemblyName).xml</DocumentationFile>
    <!-- Disable warning about public API without XML documentation: it would be nice if MICore had documentation 
    for all its methods, but it is also not a public assembly, and adding XML documentation for all its methods
    would take a fair amount of work.-->
    <NoWarn>$(NoWarn);1591</NoWarn>
    <ShouldGenerateMonoSymbols>true</ShouldGenerateMonoSymbols>
    <TargetFrameworkVersion>v4.6.2</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition="'$(IsCoreClr)' == 'true'">
    <ProjectTypeGuids>$(ProjectTypeGuids);{786C830F-07A1-408B-BD7F-6EE04809D6DB};</ProjectTypeGuids>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <CodeAnalysisRuleSet>..\IDECodeAnalysis.ruleset</CodeAnalysisRuleSet>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Desktop.Release|AnyCPU'">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Lab.Debug|AnyCPU'">
    <DebugSymbols>true</DebugSymbols>
    <DefineConstants>$(DefineConstants);DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Lab.Release|AnyCPU'">
    <DefineConstants>$(DefineConstants);TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>AnyCPU</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup Condition="'$(IsCoreClr)' == 'true'">
    <None Include="project.json" />
    <!-- A reference to the entire .NET Framework is automatically included -->
  </ItemGroup>
  <ItemGroup Condition="'$(IsCoreClr)' == 'false'">
    <Reference Include="System" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.VisualStudio.Debugger.InteropA">
      <HintPath>$(NuGetPackagesDirectory)/Microsoft.VisualStudio.Debugger.Interop.Portable.1.0.1/lib/portable-net45+net46+dnxcore50/Microsoft.VisualStudio.Debugger.InteropA.dll</HintPath>
    </Reference>
    <!-- NOTE: MIEngine's usage of Newtonsoft.Json's flows through public interfaces exposed by MICore (IPlatformAppLauncher). So this version needs to be within the binding redirect range used by devenv.exe (currently 4.5.0.0-9.0.0.0) -->
    <Reference Include="Newtonsoft.Json, Version=6.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>$(NuGetPackagesDirectory)/Newtonsoft.Json.6.0.8/lib/portable-net45+wp80+win8+wpa81+aspnetcore50/Newtonsoft.Json.dll</HintPath>
      <Private>True</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DebugEngineHost.Stub\DebugEngineHost.Stub.csproj">
      <Project>{ea876a2d-ab0f-4204-97dd-dfb3b5568978}</Project>
      <Name>DebugEngineHost.Stub</Name>
      <Private>False</Private>
    </ProjectReference>
    <ProjectReference Include="..\Microsoft.VisualStudio.Debugger.Interop.UnixPortSupplier\Microsoft.VisualStudio.Debugger.Interop.UnixPortSupplier.DesignTime.csproj">
      <Project>{7654cfbb-30db-4c20-bde3-a960cba2036c}</Project>
      <Name>Microsoft.VisualStudio.Debugger.Interop.UnixPortSupplier.DesignTime</Name>
      <EmbedInteropTypes>True</EmbedInteropTypes>
      <Private>False</Private>
    </ProjectReference>
  </ItemGroup>
  <PropertyGroup>
    <XsdCodeFile Condition="'$(IsCoreClr)' == 'true'">LaunchOptions.xsd.types.designer.cs</XsdCodeFile>
    <XsdCodeFile Condition="'$(IsCoreClr)' == 'false'">LaunchOptions.xsd.types.designer.desktop.cs</XsdCodeFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include="LaunchOptions.xsd" />
    <None Include="SetMIDebugLogging.cmd" />
    <ContentWithTargetPath Include="osxlaunchhelper.scpt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>osxlaunchhelper.scpt</TargetPath>
    </ContentWithTargetPath>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Checksum.cs" />
    <Compile Include="CommandFactories\clrdbg.cs" />
    <Compile Include="CommandFactories\gdb.cs" />
    <Compile Include="CommandFactories\lldb.cs" />
    <Compile Include="CommandFactories\MICommandFactory.cs" />
    <Compile Include="CommandLock.cs" />
    <Compile Include="Debugger.cs" />
    <Compile Include="DebuggerDisposedException.cs" />
    <Compile Include="ExceptionHelper.cs" />
    <Compile Include="IncludeExcludeList.cs" />
    <Compile Include="InvalidCoreDumpOperationException.cs" />
    <Compile Include="InvalidLaunchOptionsException.cs" />
    <Compile Include="JsonLaunchOptions.cs" />
    <Compile Include="LaunchCommand.cs" />
    <Compile Include="LaunchOptions.cs" />
    <Compile Include="$(XsdCodeFile)">
      <AutoGen>True</AutoGen>
      <DependentUpon>LaunchOptions.xsd</DependentUpon>
    </Compile>
    <Compile Include="Logger.cs" />
    <Compile Include="MICoreResources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DesignTime>True</DesignTime>
      <DependentUpon>MICoreResources.resx</DependentUpon>
    </Compile>
    <Compile Include="MIException.cs" />
    <Compile Include="MIResults.cs" />
    <Compile Include="PlatformUtilities.cs" />
    <Compile Include="ProcessMonitor.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="RunInTerminalLauncher.cs" />
    <Compile Include="Transports\ClientServerTransport.cs" />
    <Compile Include="Transports\ITransport.cs" />
    <Compile Include="Transports\LocalTransport.cs" />
    <Compile Include="Transports\MockTransport.cs" />
    <Compile Include="Transports\PipeTransport.cs" />
    <Compile Include="Transports\UnixShellPortTransport.cs" />
    <Compile Include="Transports\ServerTransport.cs" />
    <Compile Include="Transports\StreamTransport.cs" />
    <Compile Include="Transports\TcpTransport.cs" />
    <Compile Include="Transports\RunInTerminalTransport.cs" />
    <Compile Include="UnixNativeMethods.cs" />
    <Compile Include="UnixUtilities.cs" />
    <Compile Include="Utilities.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="ExampleLaunchOptions.xml" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="MICoreResources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>MICoreResources.Designer.cs</LastGenOutput>
      <SubType>Designer</SubType>
    </EmbeddedResource>
  </ItemGroup>
  <ItemGroup>
    <GlassDirCopy Include="$(OutDir)$(AssemblyName)$(TargetExt)" />
    <GlassDirCopy Include="$(OutDir)$(AssemblyName).XmlSerializers.dll" />
    <GlassDirCopy Include="$(NuGetPackagesDirectory)\Newtonsoft.Json\6.0.8\lib\portable-net45+wp80+win8+wpa81+aspnetcore50\Newtonsoft.Json.dll" Condition="'$(IsCoreClr)' == 'true'" />
    <GlassDirCopy Include="$(NuGetPackagesDirectory)\Newtonsoft.Json.6.0.8\lib\portable-net45+wp80+win8+wpa81+aspnetcore50\Newtonsoft.Json.dll" Condition="'$(IsCoreClr)' == 'false'" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Import Project="..\..\build\miengine.targets" />
  <Import Project="GenerateXmlSerializersAssembly.targets" />
  <!-- To get the seralization assembly copied to the vsix, and also to the output directory, we have this target
  which adds the XmlSerializers as if it was a source item in our project with a 'CopyToOutputDirectory' child
  node. See the 'GetCopyToOutputDirectoryItems' target in C:\Program Files (x86)\MSBuild\14.0\Bin\Microsoft.Common.CurrentVersion.targets
  for more info. -->
  <Target Name="AddXmlSerializersAssemblyToOutputGroup" BeforeTargets="GetCopyToOutputDirectoryItems">
    <ItemGroup>
      <_GenerateXmlSerializersAssemblyOutput Include="$(IntermediateOutputPath)sgen/$(AssemblyName).XmlSerializers.dll" />
      <_SourceItemsToCopyToOutputDirectoryAlways Include="@(_GenerateXmlSerializersAssemblyOutput->'%(FullPath)')">
        <TargetPath>$(AssemblyName).XmlSerializers.dll</TargetPath>
      </_SourceItemsToCopyToOutputDirectoryAlways>
    </ItemGroup>
  </Target>
</Project>